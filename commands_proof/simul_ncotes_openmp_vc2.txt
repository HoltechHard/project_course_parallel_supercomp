========================================================================
|			 SIMULATION OF NUMERICAL INTEGRATION NEWTON COTES          |
|					OPEN-MP + C - VERSION 2.0						   |
========================================================================

1) copy file ncotes_openmp_vc2.c to supercomp
$ scp /home/holger2022/ncotes_openmp_vc2.c tm5u6@login1.hpc.spbstu.ru:

2) connect with supercomputer
$ ssh -i ~/.ssh/id_rsa tm5u6@login1.hpc.spbstu.ru

Last login: Sat Feb  4 19:51:55 2023 from 188.162.65.203


  /$$$$$$   /$$$$$$   /$$$$$$         /$$$$$$  /$$$$$$$  /$$       /$$$$$$$  /$$   /$$
 /$$__  $$ /$$__  $$ /$$__  $$       /$$__  $$| $$__  $$| $$      | $$__  $$| $$  | $$
| $$  \__/| $$  \__/| $$  \__/      | $$  \__/| $$  \ $$| $$$$$$$ | $$  \ $$| $$  | $$
|  $$$$$$ | $$      | $$            |  $$$$$$ | $$$$$$$/| $$__  $$| $$$$$$$/| $$  | $$
 \____  $$| $$      | $$             \____  $$| $$____/ | $$  \ $$| $$____/ | $$  | $$
 /$$  \ $$| $$    $$| $$    $$       /$$  \ $$| $$      | $$  | $$| $$      | $$  | $$
|  $$$$$$/|  $$$$$$/|  $$$$$$/      |  $$$$$$/| $$      | $$$$$$$/| $$      |  $$$$$$/
 \______/  \______/  \______/        \______/ |__/      |_______/ |__/       \______/


3) allocate 1 node
$ salloc -N 1 -p cascade

salloc: Pending job allocation 2700478
salloc: job 2700478 queued and waiting for resources
salloc: job 2700478 has been allocated resources
salloc: Granted job allocation 2700478

4) check the node allocated
$ squeue
             JOBID PARTITION     NAME     USER ST       TIME  NODES NODELIST(REASON)
           2700478   cascade       sh    tm5u6  R       0:03      1 n06p001

5) make ssh connection with node
$ ssh n06p001
Last login: Sat Feb  4 19:52:51 2023 from 10.10.0.3

6) load modules 

[tm5u6@n06p001 project_C]$ module load compiler/gcc/9
[tm5u6@n06p001 project_C]$ module load mpi/openmpi/4.0.1/gcc/9

7) command to compile

[tm5u6@n06p001 project_C]$ gcc -fopenmp ncotes_openmp_vc2.c tinyexpr.c -o ncotes_openmp_vc2 -l m

8) command to fix number of threads

[tm5u6@n06p001 project_C]$ export OMP_NUM_THREADS=3

9) command to run program

[tm5u6@n06p001 project_C]$ ./ncotes_openmp_vc2

Name of file: exp1_c/exp1c_k4.txt

10) RESULTS OF EXPERIMENT


 Number of threads: 3

 ***** Reading input-data *****

 a = 0.000000
 b = 3.141593
 k = 4
 expr = sin(x)

 I = 2.000000
 
 Newton-cotes k coefficients:
0.000000        1.000000        2.000000        3.000000        4.000000        5.000000        6.000000        7.000000        8.000000        9.000000    10.000000
 Newton-cotes Ak coefficients:
0.000000        0.500000        0.333333        0.375000        0.044444        0.017361        0.007143        0.000405        0.000282        0.000100    0.000017
 Newton-cotes Ci coefficients:
k = 0
0.000000        0.000000        0.000000        0.000000        0.000000        0.000000        0.000000        0.000000        0.000000        0.000000    0.000000
k = 1
1.000000        1.000000        0.000000        0.000000        0.000000        0.000000        0.000000        0.000000        0.000000        0.000000    0.000000
k = 2
1.000000        4.000000        1.000000        0.000000        0.000000        0.000000        0.000000        0.000000        0.000000        0.000000    0.000000
k = 3
1.000000        3.000000        3.000000        1.000000        0.000000        0.000000        0.000000        0.000000        0.000000        0.000000    0.000000
k = 4
7.000000        32.000000       12.000000       32.000000       7.000000        0.000000        0.000000        0.000000        0.000000        0.000000    0.000000
k = 5
19.000000       75.000000       50.000000       50.000000       75.000000       19.000000       0.000000        0.000000        0.000000        0.000000    0.000000
k = 6
41.000000       216.000000      27.000000       272.000000      27.000000       216.000000      41.000000       0.000000        0.000000        0.000000    0.000000
k = 7
751.000000      3577.000000     1323.000000     2989.000000     2989.000000     1323.000000     3577.000000     751.000000      0.000000        0.000000    0.000000
k = 8
989.000000      5888.000000     -928.000000     10496.000000    -4540.000000    10496.000000    -928.000000     5888.000000     989.000000      0.000000    0.000000
k = 9
2857.000000     15741.000000    1080.000000     19344.000000    5778.000000     5778.000000     19344.000000    1080.000000     15741.000000    2857.000000         0.000000
k = 10
16067.000000    106300.000000   -48525.000000   272400.000000   -260550.000000  427368.000000   -260550.000000  272400.000000   -48525.000000   106300.000000       16067.000000

 **********************************

 Input data from global struct of data

 h = 0.261799
 k = 4
 q = 3
 expression = sin(x)

 Vector data_x:
0.000000        0.261799        0.523599        0.785398        1.047198        1.308997        1.570796        1.832596        2.094395        2.356194    2.617994        2.879793        3.141593

 Vector y:
0.000000        0.258819        0.965926        0.500000        0.707107        1.000000        0.866025        0.965926        0.866025        0.707107    0.500000        0.258819        0.000000

 Partial-integral from process 0 ====> 0.499999646663091

 Partial-integral from process 2 ====> 0.499999646663091

 Partial-integral from process 1 ====> 0.999999293326181

 *************************************************
                 FINAL RESULTS
 *************************************************

 Integral sin(x)
 with limits = (0.000000 , 3.141593) ========>
 Exact-integral = 2.000000
 Approximate-integral = 1.999998586652362
 Absolute-error = 0.000001413347638
 Relative-error = 0.000070667381880 %
 Total time to compute integral = 2.972614020109177 ms
 ********* FINISH! ************


